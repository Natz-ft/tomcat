app.conf=odservice/cache
###################### 公共配置开始  ####################
#memcached缓存配置
#memcahced server列表，（eg:10.110.1.101:11211,10.110.1.102:11211,10.110.1.103:11211） 
global.cache.server=178.27.2.14:11211
global.cache.host=192.168.229.1:11211
global.cache.duration=43200
global.cache.isUseString=true
#hsf在memcache中的唯一标识
global.cache.prefix=hsf_od_
#是否故障转移 默认为true
global.cache.failover=true
#每个服务器初始化连接数，默认值为25
global.cache.initConn=25
#每个服务器最小连接数
global.cache.minConn=10
#每个服务器最大连接数
global.cache.maxConn=300
#守护线程的启动时间,如果要关闭守护线程设置为0
global.cache.maintSleep=3000
#是否启用nagle算法
global.cache.nagle=false
#socket读取超时时间
global.cache.socketTO=3000
#是否对server的可用性进行检测,默认值为false 如果设置为true会极大的影响缓存性能
global.cache.aliveCheck=false
#hash算法，0代表使用jdk的hash算法， 如果要支持不同jdk请设置为 2（自带的hash算法）， 如果有多台cache服务器，而且考虑到动态添加cache服务器时，请设置 3
global.cache.hashingAlg=3
#socket链接超时时间 
global.cache.socketConnectTO=1
#分布式缓存权重，权重数量和servers数量相同，总和等于10.(eg：3,3,4)如果为空则代表平均分配
global.cache.weights=3
#是否支持从节点 该属性设置为true时，没有绝对的主节点和从节点，正常情况下所有服务器共同承担缓存服务器， 在一台服务器出现异常时其他服务器共同承担增加的访问压力， 但会增加一倍的缓存空间开销。 默认为true
global.cache.allowSecondaryNode=false
#在allowSecondaryNode设置为true的环境下，如果从子节点获取获取到了对应key的值，重新设置到 主节点的，该缓存的存活周期，单位（秒） 如未设置该属性，则在主节点恢复该缓存后将会永久存在，可能造成数据的不一致性 默认为1800秒(30分钟）
global.cache.restoreDelay=1800
#是否启用数据库配置表来进行缓存集群配置,默认为false，如果要使用数据库配置缓存集群参数，该参数需设置为true
global.cache.dbConfigs=false
global.cache.cacheDelay=1800
global.cache.allowMemCache=1

#localCache配置项
#是否定义守护线程来主动删除过期缓存？默认为true 如设置为false，表示只有在get的时候根据key来删除过期数据 如设置为false，本地缓存将可能存在大量的过期数据，占用更多的内存空间。 建议设置为true
global.localCache.autoDelete= true
#守护线程启动时间，默认为3000毫秒 该属性只有在autoDelte设置为true的时候生效 
global.localCache.maintSleep= 3000

###################### 公共配置结束  ####################